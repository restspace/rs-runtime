{
    "scripts": {
        "run": "deno run --allow-all --unstable --import-map=importMap.json server.ts ./serverConfig.json",
        "run-debug": "deno run --inspect-brk --allow-all --unstable --import-map=importMap.json --unsafely-ignore-certificate-errors=localhost server.ts ./serverConfig.json",
        "run-nocheck": "deno run --allow-all --unstable --no-check --unsafely-ignore-certificate-errors server.ts ./serverConfig.json",
        "run-nocheck-lib": "deno run --allow-all --unstable --no-check --import-map=importMapLib.json --unsafely-ignore-certificate-errors server.ts ./serverConfig.json",
        "run-verbose": "deno run --allow-all --unstable --no-check --import-map=importMapLib.json --unsafely-ignore-certificate-errors=restspace.local server.ts ./serverConfig.json 3100 DEBUG",
        "run-bundle": "deno run --allow-all --unsafely-ignore-certificate-errors=restspace.local bundled.js ./serverConfig.json",
        "check": "deno check --allow-import --unstable server.ts",
        "clean-tests": "rmdir C:\\Dev\\test\\test-data /S /Q && mkdir C:\\Dev\\test\\test-data",
        "test": "npm run clean-tests && deno test --unstable --allow-all test/",
        "test-nocheck": "npm run clean-tests && deno test --unstable --allow-all --no-check test/",
        "test-debug": "npm run clean-tests && deno test --inspect-brk --unstable --allow-all --import-map=importMap.json test/",
        "reload": "deno cache --import-map=importMap.json server.ts --reload",
        "bundle": "deno run --allow-read --allow-write --allow-env --allow-run --allow-net --allow-import bundle.ts && npm run fix-bundle",
        "fix-bundle": "powershell -ExecutionPolicy Bypass -File .\\fix-bundle.ps1",
        "ssh": "ssh -i C:\\dev\\keys\\stagingpac.pem ubuntu@ec2-35-176-233-252.eu-west-2.compute.amazonaws.com",
        "ssh-adem": "ssh -i C:\\dev\\keys\\ost-server-keys.pem ubuntu@ec2-18-132-142-210.eu-west-2.compute.amazonaws.com",
        "ssh-old": "ssh -i C:\\dev\\keys\\stagingpac.pem ubuntu@ec2-3-10-91-198.eu-west-2.compute.amazonaws.com",
        "deploy": "scp -i C:\\dev\\keys\\stagingpac.pem -r ..\\rs-publish\\* ubuntu@ec2-35-176-233-252.eu-west-2.compute.amazonaws.com:/var/www/rs-runtime",
        "deploy-adem": "scp -i C:\\dev\\keys\\ost-server-keys.pem -r ..\\rs-publish\\* ubuntu@ec2-18-132-142-210.eu-west-2.compute.amazonaws.com:/var/www/rs-runtime",
        "deploy-old": "scp -i C:\\dev\\keys\\stagingpac.pem -r ..\\rs-publish\\* ubuntu@ec2-3-10-91-198.eu-west-2.compute.amazonaws.com:/var/www/rs-runtime",
        "remote-restart": "ssh -i C:\\dev\\keys\\stagingpac.pem ubuntu@ec2-35-176-233-252.eu-west-2.compute.amazonaws.com \"sudo pm2 restart rsrt\"",
        "remote-restart-adem": "ssh -i C:\\dev\\keys\\ost-server-keys.pem ubuntu@ec2-18-132-142-210.eu-west-2.compute.amazonaws.com \"sudo pm2 restart rsrt\"",
        "publish": "rmdir ..\\rs-publish /S /Q && mkdir ..\\rs-publish && xcopy bundled.js ..\\rs-publish && xcopy importMap.json ..\\rs-publish",
        "--upload-data": "scp -i C:\\dev\\keys\\stagingpac.pem -r ..\\test\\data\\main\\* ubuntu@ec2-35-176-233-252.eu-west-2.compute.amazonaws.com:/var/www/rs-data/demo",
        "to-production": "npm run bundle && npm run publish && npm run deploy",
        "to-production-adem": "npm run bundle && npm run publish && npm run deploy-adem",
        "to-production-old": "npm run bundle && npm run publish && npm run deploy-old",
        "deploy-admin": "scp -i C:\\dev\\keys\\stagingpac.pem -r C:\\Dev\\json-depot\\build\\* ubuntu@ec2-35-176-233-252.eu-west-2.compute.amazonaws.com:/var/www/rs-data/ademchic2/site",
        "deploy-admin-adem": "scp -i C:\\dev\\keys\\ost-server-keys.pem -r C:\\dev\\json-depot\\build\\* ubuntu@ec2-18-132-142-210.eu-west-2.compute.amazonaws.com:/var/www/rs-data/ademchic3/site",
        "deploy-admin-atelyr": "scp -i C:\\dev\\keys\\ost-server-keys.pem -r C:\\dev\\json-depot\\build\\* ubuntu@ec2-18-132-142-210.eu-west-2.compute.amazonaws.com:/var/www/rs-data/atelyr/site",
        "deploy-admin-old": "scp -i C:\\dev\\keys\\stagingpac.pem -r C:\\Dev\\json-depot\\build\\* ubuntu@ec2-3-10-91-198.eu-west-2.compute.amazonaws.com:/var/www/rs-data/lib/site",
        "https-proxy-3131": "caddy run",
        "elasticsearch": "C:\\Dev\\elasticsearch-8.12.2\\bin\\elasticsearch",
        "login": "curl -X POST https://lib.restspace.io/auth/login -H \"Content-Type: application/json\" -d \"{\\\"email\\\":\\\"jamesej@outlook.com\\\", \\\"password\\\": \\\"%PW%\\\"}\" --cookie-jar ./cookies.dat",
        "deploy-core": "curl --cookie cookies.dat -T build.zip -H \"X-Restspacce-Request-Mode: manage\" -H \"Content-Type: application/zip\"  https://lib.restspace.io/",
        "repl": "deno repl --allow-all --unsafely-ignore-certificate-errors=restspace.local --reload",
        "wipe-cache": "rmdir /s /q %LOCALAPPDATA%\\deno"
    },
    "dependencies": {
        "dayjs": "^1.11.13",
        "esbuild-plugin-inline-worker": "^0.1.1",
        "mongodb": "^6.12.0"
    }
}
